# Rate limiting zones
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
limit_req_zone $tenant_id zone=tenant:10m rate=200r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Upstream definitions with health checks
upstream central_management {
    least_conn;
    server central-management:80 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream auth_service {
    least_conn;
    server auth-service:80 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream sales_service {
    least_conn;
    server sales-service:80 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream operations_service {
    least_conn;
    server operations-service:80 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Map to extract tenant ID from various sources
map $http_x_tenant_id $tenant_id {
    default $http_x_tenant_id;
    "" $arg_tenant_id;
}

# Cache configuration
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name _;

    # Logs
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Connection limits
    limit_conn addr 10;

    # Client body size
    client_max_body_size 20M;
    client_body_buffer_size 128k;

    # Timeouts
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/x-js text/x-cross-domain-policy application/x-font-ttf application/x-font-opentype application/vnd.ms-fontobject image/x-icon;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Metrics endpoint (for monitoring)
    location /metrics {
        access_log off;
        stub_status;
        allow 127.0.0.1;
        deny all;
    }

    # Authentication routes
    location /api/auth {
        limit_req zone=auth burst=10 nodelay;

        proxy_pass http://auth_service;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # Tenant header if present
        proxy_set_header X-Tenant-ID $tenant_id;

        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.json;
    }

    # Tenant management routes (admin only)
    location /api/tenants {
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://central_management;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Cache for GET requests
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$request_method$host$request_uri$tenant_id";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Sales service routes
    location /api/sales {
        # Rate limiting per tenant
        limit_req zone=tenant burst=50 nodelay;

        proxy_pass http://sales_service;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Tenant-ID $tenant_id;

        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;

        # Cache for GET requests
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$request_method$host$request_uri$tenant_id";
        proxy_cache_valid 200 2m;
        proxy_cache_valid 404 30s;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Operations service routes
    location /api/operations {
        # Rate limiting per tenant
        limit_req zone=tenant burst=50 nodelay;

        proxy_pass http://operations_service;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Tenant-ID $tenant_id;

        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;

        # Cache for GET requests
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$request_method$host$request_uri$tenant_id";
        proxy_cache_valid 200 2m;
        proxy_cache_valid 404 30s;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # WebSocket support for real-time features
    location /ws {
        proxy_pass http://central_management;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Tenant-ID $tenant_id;

        # Timeouts for WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Default API route (fallback to central management)
    location /api {
        limit_req zone=api burst=50 nodelay;

        proxy_pass http://central_management;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Tenant-ID $tenant_id;

        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Static files (if needed)
    location /static {
        root /var/www;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Error pages
    location = /404.json {
        internal;
        return 404 '{"success": false, "message": "Endpoint not found", "error_code": "NOT_FOUND"}';
        add_header Content-Type application/json;
    }

    location = /50x.json {
        internal;
        return 500 '{"success": false, "message": "Internal server error", "error_code": "INTERNAL_ERROR"}';
        add_header Content-Type application/json;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Default 404
    location / {
        return 404 '{"success": false, "message": "API endpoint not found", "error_code": "NOT_FOUND"}';
        add_header Content-Type application/json;
    }
}

# HTTPS configuration (uncomment when SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     server_name api.yourdomain.com;
#
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # Include all location blocks from above
# }
